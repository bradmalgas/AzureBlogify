# A minimal pipeline that provisions a static web app

trigger:
  - none

variables:
  - group: Deployment Variables

pool: Azure Pipelines

stages:
  # - stage: ProvisionInfrastructure
  #   jobs:
  #   - job: ProvisionInfrastructure
  #     displayName: Provisioning Infrastrcutres
  #     steps:
  #     - task: AzureResourceManagerTemplateDeployment@3
  #       inputs:
  #         deploymentScope: 'Resource Group'
  #         azureResourceManagerConnection: '$(azureResourceManagerConnection)'
  #         subscriptionId: '$(subscriptionId)'
  #         action: 'Create Or Update Resource Group'
  #         resourceGroupName: '$(resourceGroupName)'
  #         location: 'West Europe'
  #         templateLocation: 'Linked artifact'
  #         csmFile: './azuredeploy.json'
  #         csmParametersFile: './azuredeploy.parameters.json'
  #         deploymentMode: 'Incremental'
  #         deploymentName: 'ProvisionInfrastructure'
  #         overrideParameters:
  #           -webAppName "$(webAppName)"
  #           -appServicePlanName "$(appServicePlanName)"
  #           -storageAccountName "$(storageAccountName)"
  #           -functionAppName "$(functionAppName)"
  #           -location "$(location)"
  #           -subscriptionId "$(subscriptionId)"
  #           -resourceGroupName "$(resourceGroupName)"
  - stage: DeployFunctionApp
    jobs:
      - job: PublishFunctionApp
        displayName: Build & Publish Function App
        steps:
          - script: dotnet restore $(functionAppName)/$(functionAppName).csproj
            displayName: "Restore NuGet packages"
          - script: dotnet build $(functionAppName)/$(functionAppName).csproj --configuration Release
            displayName: "Build solution"
          - script: dotnet publish $(functionAppName)/$(functionAppName).csproj --configuration Release --output $(Build.ArtifactStagingDirectory) --self-contained false
            displayName: "Publish application"
          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(Build.ArtifactStagingDirectory)"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(functionAppName).zip"
              replaceExistingArchive: true
          - task: PublishPipelineArtifact@1
            displayName: "Publish artifact"
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/$(functionAppName).zip'
              artifactName: 'drop'
      - job: DeployFunctionApp
        displayName: Deploy Function App
        dependsOn: PublishFunctionApp
        condition: succeeded()
        steps:
            - task: PowerShell@2
            displayName: 'List artifacts in published directory'
            inputs:
              targetType: 'inline'
              script: |
                $publishPath = '$(Build.ArtifactStagingDirectory)'  # Update this path as per your pipeline configuration
                Write-Host "Contents of published directory:"
                Get-ChildItem -Path $publishPath
          # - task: AzureFunctionApp@2
          #   displayName: "Deploy function app"
          #   inputs:
          #     connectedServiceNameARM: "$(azureResourceManagerConnection)"
          #     appType: "functionApp"
          #     appName: "$(functionAppName)"
          #     package: "$(Pipeline.Workspace)/drop/$(functionAppName).zip"
