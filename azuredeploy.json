{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "webAppName": {
            "type": "string"
        },
        "appServicePlanName": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "app-skuName": {
            "type": "string"
        },
        "app-skuTier": {
            "type": "string"
        },
        "areStaticSitesDistributedBackendsEnabled": {
            "type": "bool"
        },
        "plan-sku": {
            "type": "string"
        },
        "plan-skucode": {
            "type": "string"
        },
        "workerSize": {
            "type": "string"
        },
        "workerSizeId": {
            "type": "string"
        },
        "numberOfWorkers": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "functionAppName": {
            "type": "string"
        },
        "use32BitWorkerProcess": {
            "type": "bool"
        },
        "ftpsState": {
            "type": "string"
        },
        "netFrameworkVersion": {
            "type": "string"
        },
        "resourceGroupName": {
            "type": "string"
        },
        "subscriptionId": {
            "type": "string"
        },
        "cosmosAccountName": {
            "type": "string"
        },
        "databaseName": {
            "type": "string"
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/staticSites",
            "apiVersion": "2022-09-01",
            "name": "[parameters('webAppName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "[parameters('app-skuName')]",
                "tier": "[parameters('app-skuTier')]"
            },
            "properties": {                
                "areStaticSitesDistributedBackendsEnabled": "[parameters('areStaticSitesDistributedBackendsEnabled')]"
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[parameters('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "kind": "",
            "tags": {},
            "properties": {
                "name": "[parameters('appServicePlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": false,
                "zoneRedundant": false
            },
            "sku": {
                "Tier": "[parameters('plan-Sku')]",
                "Name": "[parameters('plan-skuCode')]"
            }
        },
        {
            "apiVersion": "2022-05-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "tags": {},
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "defaultToOAuthAuthentication": true
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('functionAppName')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "location": "[parameters('location')]",
            "tags": {},
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('appServicePlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
            ],
            "properties": {
                "name": "[parameters('functionAppName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet-isolated"
                        },
                        {
                            "name": "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED",
                            "value": "1"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[parameters('functionAppName')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                    "ftpsState": "[parameters('ftpsState')]",
                    "netFrameworkVersion": "[parameters('netFrameworkVersion')]"
                },
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": null,
                "publicNetworkAccess": "Enabled",
                "httpsOnly": true,
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('resourceGroupName'), '/providers/Microsoft.Web/serverfarms/', parameters('appServicePlanName'))]"
            }
        },
        {
            "apiVersion": "2024-02-15-preview",
            "kind": "GlobalDocumentDB",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "name": "[parameters('cosmosAccountName')]",
            "location": "[parameters('location')]",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "id": "[concat(parameters('cosmosAccountName'), '-', parameters('location'))]",
                        "failoverPriority": 0,
                        "locationName": "[parameters('location')]"
                    }
                ],
                "isVirtualNetworkFilterEnabled": false,
                "minimalTlsVersion": "Tls12",
                "enableMultipleWriteLocations": false,
                "enableFreeTier": true,
                "capacity": {
                    "totalThroughputLimit": 1000
                }
            }
        },
        {
        "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
        "apiVersion": "2024-02-15-preview",
        "name": "[format('{0}/{1}', toLower(parameters('cosmosAccountName')), parameters('databaseName'))]",
        "properties": {
            "resource": {
            "id": "[parameters('databaseName')]"
            },
            "options": {
            "autoscaleSettings": {
                "maxThroughput": 1000
            }
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(parameters('cosmosAccountName')))]"
        ]
        }
    ],
    "outputs": {}
}